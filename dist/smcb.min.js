(function(){"use strict";var module=angular.module("ui.superMegaComboBox",[]);module.run(["$templateCache",function($templateCache){$templateCache.put("smcb/combobox.html",'<div class="input-group">                 <input                     class="form-control"                     ng-focus="!comboxConfig.openOnFocus || open()"                     ng-model="model.value">                 <span class="input-group-btn">                     <button class="btn" ng-click="toggle()" type"button">^</button>                 </span>             </div>             <ul class="dropdown-menu ui-smcb-dropdown" ng-show="isOpen" ng-transclude></ul>');$templateCache.put("smcb/option.html",'<li             class="ui-smcb-option"             ng-class="{ selected: $ctrl.ngModel.$viewValue === $ctrl.parseDisplayProperty(this) }">             <a ng-click="$ctrl.select($ctrl.parseDisplayProperty(this))" ng-transclude></a></li>')}]);module.provider("smComboBoxConfig",function(){var config=this;config.appendToBody=false;config.closeOnDocumentClick=true;config.matchInputWidth=true;config.openOnFocus=false;config.$get=function(){return config}});module.directive("smCombobox",["$parse","$rootScope","$timeout","smComboBoxConfig",function($parse,$rootScope,$timeout,config){return{require:["smCombobox","ngModel"],restrict:"EA",templateUrl:"smcb/combobox.html",transclude:true,scope:{isOpen:"=?",ngRequired:"=",value:"="},link:function(scope,$element,attrs,ctrls){var ctrl=ctrls[0];var ngModel=ctrls[1];ctrl.ngModel=ngModel;ctrl.parseDisplayProperty=function(obj){return $parse(attrs.value)(obj)};$element.addClass("ui-smcb");scope.comboxConfig=config;scope.model={value:undefined};ctrl.syncModel=function(){scope.model.value=ngModel.$viewValue};$timeout(function(){ctrl.syncModel()});var $input=$element.find("input");var $inputGroup=$element.find("div");var $list=$element.find("ul");if(config.appendToBody){$timeout(function(){$list[0].parentNode.removeChild($list[0]);angular.element(document.body).append($list)})}function reWidth(){if(config.matchInputWidth){$list.css("width",$inputGroup[0].offsetWidth+"px")}}$timeout(function(){reWidth()});$input.on("blur",function(){ctrl.select($input[0].value);$rootScope.$digest()});if(config.matchInputWidth){angular.element(window).on("resize",function(){reWidth()})}if(config.appendToBody){var rect=$input[0].getBoundingClientRect();$list.css({left:rect.left+"px",top:rect.top+$input[0].offsetHeight+"px"})}$element.on("click",function(event){event.stopPropagation()});if(config.closeOnDocumentClick){angular.element(document).on("click",function(event){scope.isOpen=false;$rootScope.$digest()})}},controller:["$scope",function($scope){var ctrl=this;$timeout(function(){$scope.ngModel=ctrl.ngModel});$scope.close=function(){$scope.isOpen=false};$scope.open=function(){$scope.isOpen=true};$scope.toggle=function(){$scope.isOpen=!$scope.isOpen};ctrl.select=function(val){ctrl.ngModel.$setViewValue(val);ctrl.ngModel.$setTouched();ctrl.syncModel();$scope.close()}}]}}]);module.directive("smComboboxOption",["smComboBoxConfig",function(config){var keyword;return{require:"^smCombobox",restrict:"EA",replace:true,templateUrl:"smcb/option.html",transclude:true,link:function(scope,$element,attrs,ctrl){scope.$ctrl=ctrl}}}])})();